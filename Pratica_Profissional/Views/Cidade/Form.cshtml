@using Pratica_Profissional.Util.Class;
@model Pratica_Profissional.ViewModel.CidadeVM

@{
    var action = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString().ToLower();
    bool readOnly = Convert.ToBoolean(ViewBag.ReadOnly);
    string readOnlyIf = readOnly == true ? "disabled" : "";
    var pais = new Pratica_Profissional.Models.Pais();
}

@Html.AntiForgeryToken()
<h6 class="card-header">Informações</h6>

<div class="card-body">
    @if (action != "create")
    {
        <div class="form-group">
            <div class="form-row">
                <div class="@Helper.Input2">
                    @Html.LabelFor(model => model.idCidade, "Código", new { @class = Helper.LabelTop })
                    @Html.TextBoxFor(model => model.idCidade, new { @class = "form-control", disabled = "disabled" })
                </div>
            </div>
        </div>
    }

    <div class="form-group">
        <div class="form-row">
            <div class="@Helper.Input10">
                @Html.LabelFor(model => model.nmCidade, "Cidade", new { @class = "required" })
                @Html.TextBoxFor(model => model.nmCidade, new { @class = "form-control text", maxlength = "50" })
                @Html.ValidationMessageFor(model => model.nmCidade, null, new { @class = "text-danger" })
            </div>

            <div class="@Helper.Input2">
                @Html.LabelFor(model => model.ddd, "DDD", new { @class = "required" })
                @Html.TextBoxFor(model => model.ddd, new { @class = "form-control numeric", maxlength = "6" })
                @Html.ValidationMessageFor(model => model.ddd, null, new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="form-row">
            @Html.EditorFor(u => u.Estado, "Estado/select", new { disabled = false })
        </div>
    </div>

    <div class="form-group">
        <div class="form-row">
            @if (action != "create")
            {
                <div class="@Helper.Input3">
                    @Html.LabelFor(model => model.dtCadastro, "Data de cadastro", new { @class = Helper.LabelTop })
                    @Html.TextBoxFor(model => model.dtCadastro, new { @class = "form-control", disabled = "disabled" })
                </div>

                <div class="@Helper.Input3">
                    @Html.LabelFor(model => model.dtAtualizacao, "Última atualização", new { @class = Helper.LabelTop })
                    @Html.TextBoxFor(model => model.dtAtualizacao, new { @class = "form-control", disabled = "disabled" })
                </div>
            }
        </div>
    </div>
</div>

<div class="d-flex justify-content-end" style="padding-right:33px">
    <button type="button" style="margin-right:10px" class="btn btn-primary" onclick="location.href='@Url.Action("Index", "Cidade")'">Sair</button>
    @if ((action != "details") && (action != "delete"))
    {
        <button type="submit" class="btn btn-success">Salvar</button>
    }
    @if (action == "delete")
    {
        <button type="submit" class="btn btn-danger">Remover</button>
    }

</div>





