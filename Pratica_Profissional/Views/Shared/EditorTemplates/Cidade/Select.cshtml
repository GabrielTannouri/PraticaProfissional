@model Pratica_Profissional.ViewModel.CidadeVM
@using Pratica_Profissional.Util.Class;
@{
    bool Disabled = Convert.ToBoolean(ViewData["Disabled"]);
    bool Required = Convert.ToBoolean(ViewData["Required"] ?? true);
    bool OnlySelect = Convert.ToBoolean(ViewData["onlySelect"] ?? false);
    bool LabelVertical = Convert.ToBoolean(ViewData["LabelVertical"]);
    string Label = Convert.ToString(ViewData["Label"] ?? "Cidade");
    string classLabel = Convert.ToString(ViewData["classLabel"] ?? Helper.Label);
    string classForm = Convert.ToString(ViewData["classForm"] ?? Helper.Input12);
    var Prefix = Html.ClientPrefixName().ToString(); ;
    var Estado = new Pratica_Profissional.ViewModel.EstadoVM();
}

@Html.Hidden("isEdit")

<div class="@classForm">
    @Html.LabelFor(model => model.idCidade, Label, new { @class = "required" })
    <div class="input-group">
        @Html.TextBoxFor(model => model.idCidade, new { @style = "border-radius: 4px 0px 0px 4px; width: 15%;", @class = "form-control number", maxLength = "6" })
        @Html.TextBoxFor(model => model.text, new { @class = "form-control", @style = "width:70%" })
        <a style="border-radius:0px 3px 3px 0px" data-target="#@Pratica_Profissional.Util.Class.Helper.getInputId("Modal", Prefix)" id="@Pratica_Profissional.Util.Class.Helper.getInputId("btn-localizar", Prefix)" title="Abrir a busca de @Label" class="btn btn-primary" data-toggle="modal"><i class="fa fa-search"></i></a>
        @Html.HiddenFor(k => k.text)
    </div>
    @Html.ValidationMessageFor(model => model.idCidade, null, new { @class = "text-danger" })
</div>

<div id="@Pratica_Profissional.Util.Class.Helper.getInputId("ModalLista", Prefix)" class="modal fade" data-backdrop="static" data-keyboard="false" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-body no-padddng">
                <div class="panel panel-primary" style="margin-bottom: -1px;">
                    <div class="panel-heading" style="height: 41px; padding-left:2px;font-weight: bold;">
                        <h3 class="panel-title pull-right"><button type="button" style="opacity: inherit;color: #fff;" class="close" data-dismiss="modal">&times;</button></h3>
                        <ul class="nav panel-tabs" style="width:400px">
                            <li class="active"><a data-event="true" style="margin-top:1px;color: black;" data-toggle="tab"><b><i class="fa fa-list-alt" aria-hidden="true"></i> Cidades </b></a></li>
                        </ul>
                    </div>

                    <div style="text-align:right">
                        <button id="@Pratica_Profissional.Util.Class.Helper.getInputId("Create", Prefix)" onclick="OpenModalCreateCidade()" type="button" class="btn btn-success"><i class="fa fa-plus"></i>  Adicionar</button>
                    </div>
                    <div id="body" class="modal-body" style="padding: 33px 0px 0px 0px;">
                        <div class="container-fluid">
                            <div id="TableCidade"></div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <div style="text-align:right">
                            <button id="@Pratica_Profissional.Util.Class.Helper.getInputId("Fechar", Prefix)" onclick="FecharModalCidade()" type="button" class="btn btn-outline-dark"><i class="fa fa-times"></i> Fechar</button>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
<div id="@Pratica_Profissional.Util.Class.Helper.getInputId("ModalCreate", Prefix)" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-body no-padddng">
                <div class="panel panel-primary" style="margin-bottom: -1px;">
                    <div class="panel-heading" style="height: 41px; padding-left:2px;font-weight: bold;">
                        <h3 class="panel-title pull-right"><button type="button" style="opacity: inherit;color: #fff;" class="close" data-dismiss="modal">&times;</button></h3>
                        <ul class="nav panel-tabs" style="width:400px">
                            <li class="active"><a data-event="true" style="margin-top:1px;color: black;" data-toggle="tab"><b><i class="fa fa-list-alt" aria-hidden="true"></i> Cidades </b></a></li>
                        </ul>
                    </div>
                    <div id="body" class="modal-body" style="padding: 33px 0px 0px 0px;">
                        <div class="container-fluid">

                            <div class="d-flex align-items-start">
                                <div class="@Helper.Input2">
                                    @Html.Label("idCidade", "Código")
                                    @Html.TextBox("idCidade", null, new { @class = "form-control", disabled = true })
                                </div>
                            </div>

                            <div class="d-flex align-items-start">
                                <div class="@Helper.Input12">
                                    @Html.Label("nmCidade", "Cidade", new { @class = "required" })
                                    @Html.TextBox("nmCidade", null, new { @class = "form-control", maxlength = "50", style = "text-transform:uppercase" })
                                    @Html.ValidationMessage("nmCidade", null, new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="d-flex align-items-start">
                                <div class="@Helper.Input3">
                                    @Html.Label("ddd", "DDD", new { @class = "required" })
                                    @Html.TextBox("ddd", null, new { @class = "form-control", maxlength = "5", style = "text-transform:uppercase" })
                                    @Html.ValidationMessage("ddd", null, new { @class = "text-danger" })
                                </div>
                                @Html.EditorFor(model => Estado, "Estado/select", new { disabled = false, classForm = Helper.Input6 })
                            </div>

                            <div class="d-flex align-items-start">
                                <div class="@Helper.Input3">
                                    @Html.Label("dtcadastro", "Data de cadastro", new { })
                                    @Html.TextBox("dtcadastro", null, new { @class = "form-control", disabled = true })
                                </div>

                                <div class="@Helper.Input3 ">
                                    @Html.Label("dtultalteracao", "Data de atualização", new { })
                                    @Html.TextBox("dtultalteracao", null, new { @class = "form-control", disabled = true })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <div style="text-align:right">
                            <button id="@Helper.getInputId("btnSave", Prefix)" onclick="OpenModalCreateCidade()" type="button" class="btn btn-success"><i class="fa fa-save"></i>  Salvar</button>
                            <button id="@Helper.getInputId("FecharCreate", Prefix)" onclick="FecharModalCreateCidade()" type="button" class="btn btn-danger"><i class="fa fa-ban"></i>  Cancelar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Html.AddScriptBlock(
@<script type="text/javascript">
    self = this;
    $(function () {
        document.getElementById("@Pratica_Profissional.Util.Class.Helper.getInputId("text", Prefix)").readOnly = true;

         $("#@Helper.getInputId("btn-localizar", Prefix)").on("click", function () {
             InitModalCidade();
         });

         $('#@Helper.getInputId("btnSave", Prefix)').on('click', function () {
             self.saveCidade();
         });

        $('#@Helper.getInputId("idCidade", Prefix)').change(function (data, e) {
             var id = $('#@Helper.getInputId("idCidade", Prefix)').val();
             if (id == "") {
                 $("#@Helper.getInputId("idCidade", Prefix)").val("");
                 $("#@Helper.getInputId("text", Prefix)").val("");
             } else {
                 $.ajax({
                     dataType: 'json',
                     type: 'GET',
                     url: '@Url.Action("JsDetails", "Cidade")',
                     data: { 'id': id },
                     success: function (data) {
                         if (!data) {
                             $.notify({ message: 'Nenhum registro encontrado para o código informado', icon: 'fa fa-exclamation' }, { type: 'danger' } );
                         }
                         $("#@Helper.getInputId("id", Prefix)").val(data.id);
                         $("#@Helper.getInputId("text", Prefix)").val(data.text);
                     },
                     error: function (err) {
                         alert(err);
                         alert("Erro ao buscar registro");
                     }
                 });
             }
         });
     });

    this.getFormCidade = function() {
        var form = {
                idCidade : $('#@Pratica_Profissional.Util.Class.Helper.getInputId("idCidade", Prefix)'),
                nmCidade: $('#@Pratica_Profissional.Util.Class.Helper.getInputId("nmCidade", Prefix)'),
                ddd: $('#@Pratica_Profissional.Util.Class.Helper.getInputId("ddd", Prefix)'),
                sigla: $('#@Pratica_Profissional.Util.Class.Helper.getInputId("sigla", Prefix)'),
                dtCadastro: $('#@Pratica_Profissional.Util.Class.Helper.getInputId("dtCadastro", Prefix)'),
                dtUltAlteracao: $('#@Pratica_Profissional.Util.Class.Helper.getInputId("dtultalteracao", Prefix)'),
        }
        return form;
    };

    this.clearCidade = function () {
        var form = self.getFormCidade();
        form.nmCidade.val("");
        form.ddd.val("");
        form.dtCadastro.val("");
        form.dtUltAlteracao.val("");
        form.nmCidade.focus();
    };

    this.isValidCidade = function () {
        var valid = true;
        var form = self.getFormCidade();
        console.log(form);
        if (IsNullOrEmpty(form.nmCidade.val())) {
            form.nmCidade.blink({ msg: "Campo cidade é obrigatório" });
            form.nmCidade.focus();
            valid = false;
        }

        else if (IsNullOrEmpty(form.ddd.val())) {
            form.ddd.blink({ msg: "Campo DDD é obrigatório" });
            form.ddd.focus();
            valid = false;
        }

        return valid;
    };

    getModelCidade = function (form) {
        var model = {
            idCidade: form.idCidade.val(),
            nmCidade: form.nmCidade.val(),
            ddd: form.ddd.val(),
            sigla: form.sigla.val(),
            idEstado: $("#cidade_Estado_idEstado").val(),
        }
        return model;
    };

    this.saveCidade = function () {
        if ($('#@Pratica_Profissional.Util.Class.Helper.getInputId("isEdit", Prefix)').val() == "S") {
            this.updateCidade();
        } else {
            this.insertCidade();
        }
    }

    this.insertCidade = function () {
        var form = self.getFormCidade();
        var model = getModelCidade(form);
        if (self.isValidCidade(model)) {

            $.ajax({
                dataType: 'json',
                type: 'POST',
                url: '@Url.Action("JsCreate", "Cidade")',
                data: model,
                success: function (data) {
                    self.clearCidade();
                    self.InitModalCidade();
                    $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalCreate", Prefix)").modal("hide");
                    $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalLista", Prefix)").css("overflow", "auto");
                    $.notify({ message: data.message, icon: 'fa fa-exclamation' }, { type: 'success', z_index: 2000, });

                },
                error: function (request) {
                    alert("Erro ao adicionar registro")
                }
            });
        }
    };

    this.updateCidade = function () {
        var form = self.getFormCidade();
        var model = getModelCidade(form);
        if (self.isValidCidade(model)) {
            $.ajax({
                dataType: 'json',
                type: 'POST',
                url: '@Url.Action("jsUpdate", "Cidade")',
                data: model,
                success: function (data) {
                    self.clearCidade();
                    self.InitModalCidades();
                    $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalCreate", Prefix)").modal("hide");
                    $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalLista", Prefix)").css("overflow", "auto");
                    $.notify({ message: data.message, icon: 'fa fa-exclamation' }, { type: 'success', z_index: 2000, });
                },
            });
        }
    };



    function InitModalCidade() {
          $("#TableCidade").empty();
          let tableCidade = null
          let lis = getTableCidade();
          $("#TableCidade").append(lis);

        tableCidade = $('#listaCidade').DataTable({
            ajax: { url: $('#listaCidade').attr('data-url') },
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/1.10.24/i18n/Portuguese-Brasil.json',
            },
            columns: [
                {
                    sortable: false,
                    data: null,
                    sClass: 'details-control',
                    mRender: function (data) {
                        return '<a class="btn btn-warning btn-sm" data-event="item" title="Selecionar registro"><i class="fa fa-check"></i> </a>';
                    }
                },
                {
                    sortable: false,
                    data: null,
                    mRender: function (data) {
                        return '<a class="btn btn-info btn-sm" onclick="OpenEditCidade(' + data.id + ')" title="Alterar registro"><i class="fa fa-edit"></i> </a>';
                    }
                },

                { data: "id" },
                { data: "text" }

            ],
        });
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalLista", Prefix)").modal("show");

        $('#listaCidade tbody').on('click', 'td.details-control', function () {
            var tr = $(this).closest('tr');
            var row = tableCidade.row(tr);
            row.child(SelectCidade(row.data())).show();
            tr.addClass('shown');
            $('div.slider', row.child()).slideDown();
        });
      }
     function getTableCidade() {
         let tmp = `<table id="listaCidade" class="table table-striped table-bordered" style="width:100%" data-url="@Url.Action("JsQuery", "Cidade")">
                        <thead>
                            <tr>
                                <th></th>
                                <th></th>
                                <th export="true" style="width:10%">Código</th>
                                <th export="true" style="width:90%">Nome</th>
                            </tr>
                        </thead>
                   </table>`;
          return tmp;
    };

    function FecharModalCidade() {
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalLista", Prefix)").modal("hide");
    };
    function FecharModalCreateCidade() {
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalCreate", Prefix)").css("overflow", "hidden");
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalCreate", Prefix)").modal("hide");
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalLista", Prefix)").css("overflow", "auto");
        self.clearCidade();
    };

    function OpenModalCreateCidade() {
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("btnUpdate", Prefix)").hide();
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalLista", Prefix)").css("overflow", "hidden");
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalCreate", Prefix)").css("overflow", "auto");
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalCreate", Prefix)").modal("show");
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("isEdit", Prefix)").val("N");
        if ($("#@Pratica_Profissional.Util.Class.Helper.getInputId("isEdit", Prefix)").val() == "N") {
            $(".isEdit").hide();
        }
    };

    function SelectCidade(data) {
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalLista", Prefix)").modal("hide");
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("idCidade", Prefix)").val(data.id);
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("text", Prefix)").val(data.text);
        return false;
    }
''
    function OpenEditCidade(id) {
        $.ajax({
            dataType: 'json',
            type: 'GET',
            url: '@Url.Action("JsDetails", "Cidade")',
            data: { 'id': id },
            success: function (data) {
                self.clearCidade();
                $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalCreate", Prefix)").modal("show");
                $("#@Pratica_Profissional.Util.Class.Helper.getInputId("isEdit", Prefix)").val("S");
                if ($("#@Pratica_Profissional.Util.Class.Helper.getInputId("isEdit", Prefix)").val() == "S") {
                    $(".isEdit").show();
                }
                $("#@Pratica_Profissional.Util.Class.Helper.getInputId("idCidade", Prefix)").val(data.id);
                $("#@Pratica_Profissional.Util.Class.Helper.getInputId("nmCidade", Prefix)").val(data.text);
                $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ddd", Prefix)").val(data.ddd);
                $("#@Pratica_Profissional.Util.Class.Helper.getInputId("sigla", Prefix)").val(data.sigla);
                $("#@Pratica_Profissional.Util.Class.Helper.getInputId("dtCadastro", Prefix)").val(data.dtCadastro);
                $("#@Pratica_Profissional.Util.Class.Helper.getInputId("dtUltAlteracao", Prefix)").val(data.dtUltAlteracao);
                $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalLista", Prefix)").css("overflow", "auto");
            },
            error: function (request) {
                alert("Erro ao buscar registro");
            }
        });
        return false;
    }
</script>
)