@model Pratica_Profissional.ViewModel.ContaVM
@using Pratica_Profissional.Util.Class;
@{
    bool Disabled = Convert.ToBoolean(ViewData["Disabled"]);
    bool Required = Convert.ToBoolean(ViewData["Required"] ?? true);
    bool OnlySelect = Convert.ToBoolean(ViewData["onlySelect"] ?? false);
    bool LabelVertical = Convert.ToBoolean(ViewData["LabelVertical"]);
    string Label = Convert.ToString(ViewData["Label"] ?? "Conta");
    string classLabel = Convert.ToString(ViewData["classLabel"] ?? Helper.Label);
    string classForm = Convert.ToString(ViewData["classForm"] ?? Helper.Input12);
    var Prefix = Html.ClientPrefixName().ToString(); ;
}

@Html.Hidden("isEdit")

<div class="@classForm">
    @Html.LabelFor(model => model.idConta, Label, new { @class = "required" })
    <div class="input-group">
        @Html.TextBoxFor(model => model.idConta, new { @style = "border-radius: 4px 0px 0px 4px; width: 15%;", @class = "form-control number", maxLength = "6" })
        @Html.TextBoxFor(model => model.text, new { @class = "form-control", @style = "width:70%" })
        <a style="border-radius:0px 3px 3px 0px" data-target="#@Pratica_Profissional.Util.Class.Helper.getInputId("Modal", Prefix)" id="@Pratica_Profissional.Util.Class.Helper.getInputId("btn-localizar", Prefix)" title="Abrir a busca de @Label" class="btn btn-primary" data-toggle="modal"><i class="fa fa-search"></i></a>
        @Html.HiddenFor(k => k.text)
    </div>
    @Html.ValidationMessageFor(model => model.idConta, null, new { @class = "text-danger" })
</div>

<div id="@Pratica_Profissional.Util.Class.Helper.getInputId("ModalLista", Prefix)" class="modal fade" data-backdrop="static" data-keyboard="false" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-body no-padding">
                <div class="panel panel-primary" style="margin-bottom: -1px;">
                    <div class="panel-heading" style="height: 41px; padding-left:2px;font-weight: bold;">
                        <h3 class="panel-title pull-right"><button type="button" style="opacity: inherit;color: #fff;" class="close" data-dismiss="modal">&times;</button></h3>
                        <ul class="nav panel-tabs" style="width:400px">
                            <li class="active"><a data-event="true" style="margin-top:1px;color: black;" data-toggle="tab"><b><i class="fa fa-list-alt" aria-hidden="true"></i> Contas </b></a></li>
                        </ul>
                    </div>

                    <div style="text-align:right">
                        <button id="@Pratica_Profissional.Util.Class.Helper.getInputId("CreateConta", Prefix)" onclick="OpenModalCreateConta()" type="button" class="btn btn-success"> Adicionar</button>
                    </div>
                    <div style="padding: 33px 0px 0px 0px;">
                        <div class="container-fluid">
                            <div id="TableConta" style="width:100%"></div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <div style="text-align:right">
                            <button id="@Pratica_Profissional.Util.Class.Helper.getInputId("FecharConta", Prefix)" onclick="FecharModalConta()" type="button" class="btn btn-primary"> Voltar</button>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
<div id="@Pratica_Profissional.Util.Class.Helper.getInputId("ModalCreate", Prefix)" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-body no-padding">
                <div class="panel panel-primary" style="margin-bottom: -1px;">
                    <div class="panel-heading" style="height: 41px; padding-left:2px;font-weight: bold;">
                        <h3 class="panel-title pull-right"><button type="button" style="opacity: inherit;color: #fff;" class="close" data-dismiss="modal">&times;</button></h3>
                        <ul class="nav panel-tabs" style="width:400px">
                            <li class="active"><a data-event="true" style="margin-top:1px;color: black;" data-toggle="tab"><b><i class="fa fa-list-alt" aria-hidden="true"></i> Contas </b></a></li>
                        </ul>
                    </div>
                    <div id="body" class="modal-body" style="padding: 33px 0px 0px 0px;">
                        <div class="container-fluid">

                            <div class="d-flex align-items-start">
                                <div class="@Helper.Input2">
                                    @Html.Label("idConta", "Código")
                                    @Html.TextBox("idConta", null, new { @class = "form-control", disabled = true })
                                </div>
                            </div>
                            <div class="d-flex align-items-start">
                                <div class="@Helper.Input12">
                                    @Html.Label("nmConta", "Conta", new { @class = "required" })
                                    @Html.TextBox("nmConta", null, new { @class = "form-control", maxlength = "50", style = "text-transform:uppercase" })
                                    @Html.ValidationMessage("nmConta", null, new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="d-flex align-items-start">
                                <div class="@Helper.Input3">
                                    @Html.Label("vlSaldo", "Saldo", new { @class = "required" })
                                    @Html.TextBox("vlSaldo", null, new { @class = "form-control", maxlength = "5" })
                                    @Html.ValidationMessage("vlSaldo", null, new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="d-flex align-items-start">
                                <div class="@Helper.Input3">
                                    @Html.Label("dtcadastro", "Data de cadastro", new { })
                                    @Html.TextBox("dtcadastro", null, new { @class = "form-control", disabled = true })
                                </div>

                                <div class="@Helper.Input3 ">
                                    @Html.Label("dtultalteracao", "Data de atualização", new { })
                                    @Html.TextBox("dtultalteracao", null, new { @class = "form-control", disabled = true })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div style="text-align:right">
                    <button id="@Helper.getInputId("btnSaveConta", Prefix)" onclick="OpenModalCreateConta()" type="button" class="btn btn-success"> Salvar</button>
                    <button id="@Helper.getInputId("FecharCreateConta", Prefix)" onclick="FecharModalCreateConta()" type="button" class="btn btn-danger"> Cancelar</button>
                </div>
            </div>
        </div>
    </div>
</div>
@Html.AddScriptBlock(
@<script type="text/javascript">
    self = this;
    $(function () {
          document.getElementById("@Pratica_Profissional.Util.Class.Helper.getInputId("text", Prefix)").readOnly = true;

         $("#@Pratica_Profissional.Util.Class.Helper.getInputId("btn-localizar", Prefix)").on("click", function () {
             InitModalContas();
         });
         $('#@Pratica_Profissional.Util.Class.Helper.getInputId("btnSaveConta", Prefix)').on('click', function () {
             self.saveConta();
         });
         $('#@Pratica_Profissional.Util.Class.Helper.getInputId("idConta", Prefix)').change(function (data, e) {
             var id = $('#@Pratica_Profissional.Util.Class.Helper.getInputId("idConta", Prefix)').val();
             if (id == "") {
                 $("#@Pratica_Profissional.Util.Class.Helper.getInputId("idConta", Prefix)").val("");
                 $("#@Pratica_Profissional.Util.Class.Helper.getInputId("text", Prefix)").val("");
             } else {
                 $.ajax({
                     dataType: 'json',
                     type: 'GET',
                     url: '@Url.Action("JsDetails", "ContaContabil")',
                     data: { 'id': id },
                     success: function (data) {
                         if (!data) {
                             $.notify({ message: 'Nenhum registro encontrado para o código informado', icon: 'fa fa-exclamation' }, { type: 'danger' } );
                         }
                         $("#@Pratica_Profissional.Util.Class.Helper.getInputId("id", Prefix)").val(data.id);
                         $("#@Pratica_Profissional.Util.Class.Helper.getInputId("text", Prefix)").val(data.text);
                     },
                     error: function (err) {
                         alert(err);
                         alert("Erro ao buscar registro");
                     }
                 });
             }
         });
     });
    this.getFormConta = function() {
        var form = {
               idConta : $('#@Pratica_Profissional.Util.Class.Helper.getInputId("idConta", Prefix)'),
               nmConta: $('#@Pratica_Profissional.Util.Class.Helper.getInputId("nmConta", Prefix)'),
               vlSaldo: $('#@Pratica_Profissional.Util.Class.Helper.getInputId("vlSaldo", Prefix)'),
               dtCadastro: $('#@Pratica_Profissional.Util.Class.Helper.getInputId("dtCadastro", Prefix)'),
               dtUltAlteracao: $('#@Pratica_Profissional.Util.Class.Helper.getInputId("dtultalteracao", Prefix)'),
        }
        return form;
    };

    this.clearConta = function () {
        var form = self.getFormConta();
        form.nmConta.val("");
        form.vlSaldo.val("");
        form.dtCadastro.val("");
        form.dtUltAlteracao.val("");
        form.nmConta.focus();
    };

    this.isValidConta = function () {
        var valid = true;
        var form = self.getFormConta();

        if (IsNullOrEmpty(form.nmConta.val())) {
            form.nmConta.blink({ msg: "Por favor, informe o nome da conta!" });
            form.nmConta.focus();
            valid = false;
        }

        else if (form.vlSaldo.val()) {
            form.vlSaldo.blink({ msg: "Por favor, informe o saldo!" });
            form.vlSaldo.focus();
            valid = false;
        }
        return valid;
    };

    getModelConta = function (form) {
        var model = {
            idConta: form.idConta.val(),
            nmConta: form.nmConta.val(),
            vlSaldo: form.vlSaldo.val(),
        }
        return model;
    };

   this.saveConta = function () {
           if ($('#@Pratica_Profissional.Util.Class.Helper.getInputId("isEdit", Prefix)').val() == "S") {
               this.updateConta();
           } else {
               this.insertConta();
           }
    }

    this.insertConta = function () {
            var form = self.getFormConta();
        var model = getModelConta(form);
        if (self.isValidConta(model)) {

                $.ajax({
                    dataType: 'json',
                    type: 'POST',
                    url: '@Url.Action("JsCreate", "ContaContabil")',
                    data: model,
                    success: function (data) {
                        self.clearConta();
                        InitModalContas();
                        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalCreate", Prefix)").modal("hide");
                        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalLista", Prefix)").css("overflow", "auto");
                        $.notify({ message: data.message, icon: 'fa fa-exclamation' }, { type: 'success', z_index: 2000, });

                    },
                    error: function (request) {
                        alert("Erro ao adicionar registro")
                    }
                });
            }
        };

    this.updateConta = function () {
        var form = self.getFormConta();
        var model = getModelConta(form);
        if (self.isValidConta(model)) {
                $.ajax({
                    dataType: 'json',
                    type: 'POST',
                    url: '@Url.Action("jsUpdate", "ContaContabil")',
                    data: model,
                    success: function (data) {
                        self.clearConta();
                        InitModalContas();
                        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalCreate", Prefix)").modal("hide");
                        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalLista", Prefix)").css("overflow", "auto");
                        $.notify({ message: data.message, icon: 'fa fa-exclamation' }, { type: 'success', z_index: 2000, });
                    },
                });
            }
    };

    function InitModalContas() {
        $("#TableConta").empty();
        let tableConta = null
        let lis = getTableContas();
        $("#TableConta").append(lis);
        tableConta = $('#listaConta').DataTable({
            ajax: { url: $('#listaConta').attr('data-url') },
            language: {
                url: 'https://cdn.datatables.net/plug-ins/1.10.24/i18n/Portuguese-Brasil.json',
            },
            columns: [
                {
                    sortable: false,
                    data: null,
                    sClass: 'details-control',
                    mRender: function (data) {
                        return '<a class="btn btn-warning btn-sm" data-event="item" title="Selecionar registro"><i class="fa fa-check"></i> </a>';
                    }
                },
                {
                    sortable: false,
                    data: null,
                    mRender: function (data) {
                        return '<a class="btn btn-info btn-sm" onclick="OpenEditConta(' + data.id + ')" title="Alterar registro"><i class="fa fa-edit"></i> </a>';
                    }
                },
                { data: "id" },
                { data: "text" },
            ],
        });

        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalLista", Prefix)").modal("show");
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("isEdit", Prefix)").val("S");

        $('#listaConta tbody').on('click', 'td.details-control', function () {
            var tr = $(this).closest('tr');
            var row = tableConta.row(tr);
            row.child(SelectConta(row.data())).show();
            tr.addClass('shown');
            $('div.slider', row.child()).slideDown();
        });
    }

    function getTableContas() {
        let tmp = `<table id="listaConta" class="table table-striped table-bordered" style="width:100%" data-url="@Url.Action("JsQuery", "ContaContabil")">
                        <thead>
                            <tr>
                                <th></th>
                                <th></th>
                                <th export="true" style="width:10%">Código</th>
                                <th export="true" style="width:90%">Nome</th>
                            </tr>
                        </thead>
                   </table>`;
          return tmp;
    };
    function FecharModalConta() {
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalLista", Prefix)").modal("hide");
    };
    function FecharModalCreateConta() {
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalCreate", Prefix)").css("overflow", "hidden");
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalCreate", Prefix)").modal("hide");
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalLista", Prefix)").css("overflow", "auto");
        self.clearConta();
    };
    function OpenModalCreateConta() {
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("btnUpdate", Prefix)").hide();
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalLista", Prefix)").css("overflow", "hidden");
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalCreate", Prefix)").css("overflow", "auto");
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalCreate", Prefix)").modal("show");
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("isEdit", Prefix)").val("N");
        if ($("#@Pratica_Profissional.Util.Class.Helper.getInputId("isEdit", Prefix)").val() == "N") {
            $(".isEdit").hide();
        }
    };
    function SelectConta(data) {
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalLista", Prefix)").modal("hide");
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("idConta", Prefix)").val(data.id);
        $("#@Pratica_Profissional.Util.Class.Helper.getInputId("text", Prefix)").val(data.text);
        return false;
    };
    function OpenEditConta(id) {
        $.ajax({
            dataType: 'json',
            type: 'GET',
            url: '@Url.Action("JsDetails", "ContaContabil")',
            data: { 'id': id },
            success: function (data) {
                self.clearConta();
                $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalCreate", Prefix)").modal("show");
                $("#@Pratica_Profissional.Util.Class.Helper.getInputId("isEdit", Prefix)").val("S");
                if ($("#@Pratica_Profissional.Util.Class.Helper.getInputId("isEdit", Prefix)").val() == "S") {
                    $(".isEdit").show();
                }
                    $("#@Pratica_Profissional.Util.Class.Helper.getInputId("idConta", Prefix)").val(data.id);
                    $("#@Pratica_Profissional.Util.Class.Helper.getInputId("nmConta", Prefix)").val(data.text);
                    $("#@Pratica_Profissional.Util.Class.Helper.getInputId("vlSaldo", Prefix)").val(data.vlSaldo);
                    $("#@Pratica_Profissional.Util.Class.Helper.getInputId("dtCadastro", Prefix)").val(data.dtCadastro);
                    $("#@Pratica_Profissional.Util.Class.Helper.getInputId("dtUltAlteracao", Prefix)").val(data.dtUltAlteracao);
                    $("#@Pratica_Profissional.Util.Class.Helper.getInputId("ModalLista", Prefix)").css("overflow", "auto");
            },
            error: function (request) {
                alert("Erro ao buscar registro");
            }
        });
        return false;
    }
</script>
)