@using Pratica_Profissional.Util.Class;
@model Pratica_Profissional.ViewModel.PaisVM

@{
    var action = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString().ToLower();
    bool readOnly = Convert.ToBoolean(ViewBag.ReadOnly);
    var pais = new Pratica_Profissional.Models.Pais();
}

@Html.AntiForgeryToken()

<h6 class="card-header">Informações</h6>

<div class="card-body">
    @if (action != "create")
    {
        <div class="d-flex align-items-start">
            <div class="@Helper.Input2">
                @Html.LabelFor(model => model.idPais, "Código", new { @class = Helper.LabelTop })
                @Html.TextBoxFor(model => model.idPais, new { @class = "form-control", disabled = "disabled" })
            </div>
        </div>
    }
    <br />
    <div class="d-flex align-items-start">
        <div class="@Helper.Input8">
            @Html.LabelFor(model => model.nmPais, "Nome", new { @class = "required" })
            @Html.TextBoxFor(model => model.nmPais, new { @class = "form-control text", maxlength = "50" })
            @Html.ValidationMessageFor(model => model.nmPais, null, new { @class = "text-danger" })
        </div>

        <div class="@Helper.Input2">
            @Html.LabelFor(model => model.sigla, "Sigla", new { @class = "required" })
            @Html.TextBoxFor(model => model.sigla, new { @class = "form-control textNotSpace", maxlength = "2", type = "text" })
            @Html.ValidationMessageFor(model => model.sigla, null, new { @class = "text-danger" })
        </div>

        <div class="@Helper.Input2">
            @Html.LabelFor(model => model.ddi, "DDI", new { @class = "required" })
            @Html.TextBoxFor(model => model.ddi, new { @class = "form-control textDDI", maxlength = "4" })
            @Html.ValidationMessageFor(model => model.ddi, null, new { @class = "text-danger" })
        </div>
    </div>
    <br />
    @if (action != "create")
    {
        <div class="d-flex align-items-start">
            <div class="@Helper.Input3">
                @Html.LabelFor(model => model.dtCadastro, "Data de cadastro", new { @class = Helper.LabelTop })
                @Html.TextBoxFor(model => model.dtCadastro, new { @class = "form-control", disabled = "disabled" })
            </div>

            <div class="@Helper.Input3">
                @Html.LabelFor(model => model.dtAtualizacao, "Última atualização", new { @class = Helper.LabelTop })
                @Html.TextBoxFor(model => model.dtAtualizacao, new { @class = "form-control", disabled = "disabled" })
            </div>
        </div>
    }

</div>

<div class="d-flex justify-content-end" style="padding-right:33px">
    <button type="button" style="margin-right:10px" class="btn btn-primary" onclick="location.href='@Url.Action("Index", "Pais")'">Sair</button>
    @if ((action != "details") && (action != "delete"))
    {
        <button type="submit" class="btn btn-success">Salvar</button>
    }
    @if (action == "delete")
    {
        <button type="submit" class="btn btn-danger">Remover</button>
    }

</div>




