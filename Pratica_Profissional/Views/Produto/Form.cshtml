@using Pratica_Profissional.Util.Class;
@model Pratica_Profissional.ViewModel.ProdutoVM

@{
    var action = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString().ToLower();
    bool readOnly = Convert.ToBoolean(ViewBag.ReadOnly);
}

@Html.AntiForgeryToken()

<h6 class="card-header">Informações</h6>

<div class="card-body">

    @if (action != "create")
    {
        <div class="d-flex align-items-start">
            <div class="@Helper.Input2">
                @Html.LabelFor(model => model.idProduto, "Código", new { @class = Helper.LabelTop })
                @Html.TextBoxFor(model => model.idProduto, new { @class = "form-control", disabled = "disabled" })
            </div>
        </div>
    }
    <br />

    <div class="d-flex align-items-start">
        <div class="@Helper.Input9">
            @Html.LabelFor(model => model.nmProduto, "Produto", new { @class = "required" })
            @Html.TextBoxFor(model => model.nmProduto, new { @class = "form-control text", maxlength = "50" })
            @Html.ValidationMessageFor(model => model.nmProduto, null, new { @class = "text-danger" })
        </div>

        <div class="@Helper.Input3">
            @Html.LabelFor(model => model.flUnidade, "Unidade de medida", new { @class = "required" })
            @Html.DropDownListFor(model => model.flUnidade, Pratica_Profissional.ViewModel.ProdutoVM.unidade, new { @class = "form-control" })
        </div>
    </div>
    <br />

    <div class="d-flex align-items-start">
        @Html.EditorFor(u => u.Categoria, "Categoria/select", new { disabled = false })
    </div>
    <br />

    <div class="d-flex align-items-start">
        <div class="@Helper.Input3">
            @Html.LabelFor(model => model.nrEstoque, "Estoque", new { @class = Helper.LabelTop })
            @Html.TextBoxFor(model => model.nrEstoque, new { @class = "form-control integer", @disabled = true })
        </div>

        <div class="@Helper.Input3">
            @Html.LabelFor(model => model.vlPrecoCusto, "Preço custo (R$)", new { @class = Helper.LabelTop })
            @Html.TextBoxFor(model => model.vlPrecoCusto, new { @class = "form-control currency", @disabled = true })
        </div>

        <div class="@Helper.Input3">
            @Html.LabelFor(model => model.vlPrecoVenda, "Preço venda (R$)", new { @class = "required" })
            @Html.TextBoxFor(model => model.vlPrecoVenda, new { @class = "form-control currency" })
            @Html.ValidationMessageFor(model => model.vlPrecoVenda, null, new { @class = "text-danger" })
        </div>

        <div class="@Helper.Input3">
            @Html.LabelFor(model => model.vlPrecoUltCompra, "Preço última compra (R$)", new { @class = Helper.LabelTop })
            @Html.TextBoxFor(model => model.vlPrecoUltCompra, new { @class = "form-control currency", @id = "decimalMask", @disabled = true })
        </div>
    </div>
    <br />

    <div class="d-flex align-items-start">
        @Html.EditorFor(u => u.Fornecedor, "Fornecedor/select", new { disabled = false })
    </div>
    <br />


    <div class="d-flex align-items-start">
        @if (action != "create")
        {
            <div class="d-flex align-items-start">
                <div class="@Helper.Input5">
                    @Html.LabelFor(model => model.dtCadastro, "Data de cadastro", new { @class = Helper.LabelTop })
                    @Html.TextBoxFor(model => model.dtCadastro, new { @class = "form-control", disabled = "disabled" })
                </div>

                <div class="@Helper.Input5">
                    @Html.LabelFor(model => model.dtAtualizacao, "Última atualização", new { @class = Helper.LabelTop })
                    @Html.TextBoxFor(model => model.dtAtualizacao, new { @class = "form-control", disabled = "disabled" })
                </div>
            </div>
        }
    </div>
</div>

<div class="d-flex justify-content-end" style="padding-right:33px">
    <button type="button" style="margin-right:10px" class="btn btn-primary" onclick="location.href='@Url.Action("Index", "Produto")'">Sair</button>
    @if ((action != "details") && (action != "delete"))
    {
        <button type="submit" class="btn btn-success">Salvar</button>
    }
    @if (action == "delete")
    {
        <button type="submit" class="btn btn-danger">Remover</button>
    }

</div>




