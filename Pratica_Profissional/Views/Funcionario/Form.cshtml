@using Pratica_Profissional.Util.Class;
@model Pratica_Profissional.ViewModel.FuncionarioVM

@{
    var action = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString().ToLower();
}

@Html.AntiForgeryToken()

<h6 class="card-header">Informações pessoais</h6>

<div class="card-body">

    @if (action != "create")
    {

        <div class="form-group">
            <div class="form-row">
                <div class="@Helper.Input2">
                    @Html.LabelFor(model => model.idFuncionario, "Código", new { @class = Helper.LabelTop })
                    @Html.TextBoxFor(model => model.idFuncionario, new { @class = "form-control", disabled = "disabled" })
                </div>
            </div>
        </div>
    }

    <div class="form-group">
        <div class="form-row">

            <div class="@Helper.Input6">
                @Html.LabelFor(model => model.nmFuncionario, "Funcionário", new { @class = "required" })
                @Html.TextBoxFor(model => model.nmFuncionario, new { @class = "form-control text", maxlength = "50" })
                @Html.ValidationMessageFor(model => model.nmFuncionario, null, new { @class = "text-danger" })
            </div>

            <div class="@Helper.Input6">
                @Html.LabelFor(model => model.nmApelido, "Apelido", new { @class = Helper.LabelTop })
                @Html.TextBoxFor(model => model.nmApelido, new { @class = "form-control text", maxlength = "50" })
            </div>

        </div>
    </div>

</div>
<h6 class="card-header">Informações endereço</h6>
<div class="card-body">

    <div class="form-group">
        <div class="form-row">
            <div class="@Helper.Input3">
                @Html.LabelFor(model => model.cep, "CEP", new { @class = "required" })
                @Html.TextBoxFor(model => model.cep, new { @class = "form-control", maxlength = "10", @id = "cep" })
                @Html.ValidationMessageFor(model => model.cep, null, new { @class = "text-danger" })
            </div>

            <div class="@Helper.Input5">
                @Html.LabelFor(model => model.endereco, "Logradouro", new { @class = "required" })
                @Html.TextBoxFor(model => model.endereco, new { @class = "form-control text", maxlength = "50", })
                @Html.ValidationMessageFor(model => model.endereco, null, new { @class = "text-danger" })
            </div>

            <div class="@Helper.Input4">
                @Html.LabelFor(model => model.bairro, "Bairro", new { @class = "required" })
                @Html.TextBoxFor(model => model.bairro, new { @class = "form-control text", maxlength = "50", })
                @Html.ValidationMessageFor(model => model.bairro, null, new { @class = "text-danger" })
            </div>
        </div>
    </div>


    <div class="form-group">
        <div class="form-row">
            <div class="@Helper.Input3">
                @Html.LabelFor(model => model.nrEndereco, "Número", new { @class = "required" })
                @Html.TextBoxFor(model => model.nrEndereco, new { @class = "form-control", maxlength = "10" })
                @Html.ValidationMessageFor(model => model.nrEndereco, null, new { @class = "text-danger" })
            </div>

            <div class="@Helper.Input5">
                @Html.LabelFor(model => model.complemento, "Complemento", new { @class = Helper.LabelTop })
                @Html.TextBoxFor(model => model.complemento, new { @class = "form-control text", maxlength = "25", })
            </div>

        </div>
    </div>

    <div class="form-group">
        <div class="form-row">
            @Html.EditorFor(u => u.cidade, "Cidade/select", new { disabled = false })
        </div>
    </div>

</div>

<h6 class="card-header">Informações adicionais</h6>
<div class="card-body">


    <div class="form-group">
        <div class="form-row">
            <div class="@Helper.Input9">
                @Html.LabelFor(model => model.email, "E-mail", new { @class = Helper.LabelTop })
                @Html.TextBoxFor(model => model.email, new { @class = "form-control", maxlength = "50", @id = "email" })
            </div>

            <div class="@Helper.Input3">
                @Html.LabelFor(model => model.nrCel, "WhatsApp", new { @class = "required" })
                @Html.TextBoxFor(model => model.nrCel, new { @class = "form-control", maxlength = "15", @id = "cel" })
                @Html.ValidationMessageFor(model => model.nrCel, null, new { @class = "text-danger" })
            </div>
        </div>
    </div>


    <div class="form-group">
        <div class="form-row">
            <div class="@Helper.Input3">
                @Html.LabelFor(model => model.dtNascimento, "Data de nascimento", new { @class = "required" })
                @Html.TextBoxFor(model => model.dtNascimento, new { @type = "date", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.dtNascimento, null, new { @class = "text-danger" })
            </div>

            <div class="@Helper.Input3">
                @Html.LabelFor(model => model.genero, "Gênero", new { @class = "required" })
                @Html.DropDownListFor(model => model.genero, Pratica_Profissional.ViewModel.ClienteVM.Genero, new { @class = "form-control" })
            </div>

            <div class="@Helper.Input3">
                @Html.LabelFor(model => model.cpf, "CPF", new { @class = "required" })
                @Html.TextBoxFor(model => model.cpf, new { @class = "form-control", @id = "cpf" })
                @Html.ValidationMessageFor(model => model.cpf, null, new { @class = "text-danger" })
            </div>

            <div class="@Helper.Input3">
                @Html.LabelFor(model => model.rg, "RG", new { @class = Helper.LabelTop })
                @Html.TextBoxFor(model => model.rg, new { @class = "form-control" })
            </div>

        </div>
    </div>


    <div class="form-group">
        <div class="form-row">
            <div class="@Helper.Input3">
                @Html.LabelFor(model => model.cargo, "Cargo", new { @class = "required" })
                @Html.TextBoxFor(model => model.cargo, new { @class = "form-control", maxlength = "50", @id = "cep" })
                @Html.ValidationMessageFor(model => model.cargo, null, new { @class = "text-danger" })
            </div>

            <div class="@Helper.Input3">
                @Html.LabelFor(model => model.salario, "Salário (R$)", new { @class = "required" })
                @Html.TextBoxFor(model => model.salario, new { @class = "form-control currency" })
                @Html.ValidationMessageFor(model => model.salario, null, new { @class = "text-danger" })
            </div>

            <div class="@Helper.Input3">
                @Html.LabelFor(model => model.dtAdmissao, "Data de admissão", new { @class = "required" })
                @Html.TextBoxFor(model => model.dtAdmissao, new { @type = "date", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.dtAdmissao, null, new { @class = "text-danger" })
            </div>
            @if (action != "create")
            {
                <div class="@Helper.Input3">
                    @Html.LabelFor(model => model.dtDemissao, "Data de demissão", new { @class = Helper.LabelTop })
                    @Html.TextBoxFor(model => model.dtDemissao, new { @type = "date", @class = "form-control" })
                </div>
            }

        </div>
    </div>


    <div class="form-group">
        <div class="form-row">
            <div class="@Helper.Input12">
                @Html.LabelFor(model => model.dsObservacao, "Observações", new { @class = Helper.LabelTop })
                @Html.TextAreaFor(model => model.dsObservacao, new { @class = "form-control" })
            </div>
        </div>
    </div>


    <div class="form-group">
        <div class="form-row">

            @if (action != "create")
            {
                <div class="@Helper.Input3">
                    @Html.LabelFor(model => model.dtCadastro, "Data de cadastro", new { @class = Helper.LabelTop })
                    @Html.TextBoxFor(model => model.dtCadastro, new { @class = "form-control", disabled = "disabled" })
                </div>

                <div class="@Helper.Input3">
                    @Html.LabelFor(model => model.dtAtualizacao, "Última atualização", new { @class = Helper.LabelTop })
                    @Html.TextBoxFor(model => model.dtAtualizacao, new { @class = "form-control", disabled = "disabled" })
                </div>
            }

        </div>
    </div>

</div>

<div class="d-flex justify-content-end" style="padding-right:33px">
    <button type="button" style="margin-right:10px" class="btn btn-primary" onclick="location.href='@Url.Action("Index", "Funcionario")'">Sair</button>
    @if ((action != "details") && (action != "delete"))
    {
        <button type="submit" class="btn btn-success">Salvar</button>
    }
    @if (action == "delete")
    {
        <button type="submit" class="btn btn-danger">Remover</button>
    }

</div>
